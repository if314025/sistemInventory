/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.sistem.gui;

import com.sun.org.apache.xalan.internal.res.XSLTErrorResources;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jgroups.JChannel;
import org.jgroups.Message;
import org.jgroups.ReceiverAdapter;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JLabel;

/**
 *
 * @author Okta
 */
public class minumanui extends javax.swing.JFrame {

    private PreparedStatement preparedStatement = null;
    private JChannel channel = null;
    private String nama = null, jenis = null, jumlah = null,kategori=null,tanggal=null,status="order",username=null;
    
    
    private DefaultTableModel tabelModel = null;
    private ResultSet resultSet = null;
    private String id_barang = null;
   
    private int Hasil = 0;
    private int idBarang ;

    

    public String getJumlah() {
        return jumlah;
    }

    public void setJumlah(String jumlah) {
        this.jumlah = jumlah;
    }
    
    public String getNama() {
        return nama;
    }

    public void setNama(String nama) {
        this.nama = nama;
    }

    public String getJenis() {
        return jenis;
    }

    public void setJenis(String jenis) {
        this.jenis = jenis;
    }
    
    

    public int getIdBarang() {
        return idBarang;
    }

    public void setIdBarang(int idBarang) {
        this.idBarang = idBarang;
    }
    
    
    
    private Login lgn = Login.getInstanceData();
    private Connection myConnection = lgn.getKoneksi();
    public String myGroup = lgn.getGroup();
    
    public minumanui() {
        initComponents();
        jLabel6.setText(lgn.getUsername() + " sedang aktif....");
        username = lgn.getUsername();
        tabelModel = new DefaultTableModel();
        jTable1.setModel(tabelModel);
        tabelModel.addColumn("id_menu");
        tabelModel.addColumn("Nama_Menu");
        tabelModel.addColumn("Keterangan_Menu");
        tabelModel.addColumn("harga_menu");
        
        loadTabelBarang();
    }
    
    private void loadTabelBarang()
    {
        tabelModel.getDataVector().removeAllElements();
        tabelModel.fireTableDataChanged();
        
        try
        {
           String query = "SELECT * FROM menu  WHERE kategori_menu = 'minuman'";
            preparedStatement = myConnection.prepareStatement(query);
            resultSet = preparedStatement.executeQuery();
            while(resultSet.next())
            {
                Object[] ob = new Object[4];
                
                ob[0] = resultSet.getString("id_menu");
                ob[1] = resultSet.getString("nama_menu");
                ob[2] = resultSet.getString("ket_menu");
                ob[3] = resultSet.getString("harga_menu");
                
                
                tabelModel.addRow(ob);
            }
            
            resultSet.close();
            preparedStatement.close();
        }
        catch(SQLException e)
        { }
    }
    
    
    
    
    private boolean validation(String nama,String jenis,String jumlah,String tanggal)
    {
        
        if(jumlah.equalsIgnoreCase(""))
        {
            return false;
        }
        if(jenis.equalsIgnoreCase(""))
        {
            return false;
        }
        if(nama.equalsIgnoreCase(""))
        {
            return false;
        }
        if(tanggal.equalsIgnoreCase(""))
        {
            return false;
        }
        
        return true;
    }
    
    
    
    
    
    private void clearField()
    {
        jLabel5.setText("");
        jLabel8.setText("");
        
        jLabel9.setText("");
    }
    
     private void defaultValue()
    {
        this.nama = null;
        this.jenis = null;
        this.jumlah = null;
    }
    
    public void runJGroup() throws Exception
    {
        channel = new JChannel();
        channel.connect(myGroup);
        doReceive();
    }
    
    public void doReceive()
    {
        channel.setReceiver(new ReceiverAdapter()
        {
            public void receive(Message msg)
            {
                loadTabelBarang();
               
            }
        });
    }
    
    public void sendMessage() throws Exception
    {
        
        defaultValue();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Daftar Account");

        jLabel2.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Del'S Cafe");

        jLabel3.setText("Nama Menu ");

        jLabel4.setText("Harga Menu");

        jButton1.setText("Pesan");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setText("jLabel6");

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jScrollPane2.setViewportView(jScrollPane1);

        jLabel7.setText("Ket Menu");

        jLabel12.setText("      ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(32, 32, 32)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(693, 693, 693))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12)))
                        .addGap(176, 176, 176))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(272, 272, 272)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)
                        .addGap(41, 41, 41)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel12)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(jButton1)
                .addContainerGap(139, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void updateDataBarang(int Hasil) throws SQLException
    {
        int stok = 0 ;
        
        String query1 = "SELECT * FROM account WHERE id_account = ?";
        preparedStatement = myConnection.prepareStatement(query1);
        preparedStatement.setInt(1,getIdBarang());
        resultSet = preparedStatement.executeQuery();
        while(resultSet.next())
        {
            stok = resultSet.getInt("saldo");          
        }
        stok = stok + Hasil;
        
        String temp_jumlah = String.valueOf(stok);
        setJumlah(temp_jumlah);
        
        
        String query = "UPDATE account "
                + "SET saldo=? "
                + "WHERE id_account = ? ";
        preparedStatement = myConnection.prepareStatement(query);
        preparedStatement.setInt(1, stok);
        preparedStatement.setInt(2, getIdBarang());
        
        
        preparedStatement.executeUpdate();
        
        JOptionPane.showMessageDialog(null, "Data berhasil diupdate......");
        
        preparedStatement.close();
        
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        new menuui().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row = jTable1.getSelectedRow();
        if(row == -1)
        {
            JOptionPane.showMessageDialog(null, "Pilih data.....");
        }
        else
        {
            DateFormat df = new SimpleDateFormat("yy-MM-dd HH:mm:ss");
       
            Date dateobj = new Date();
            int test = Integer.valueOf(tabelModel.getValueAt(row, 0)+"") ;
            setIdBarang(test);
            jLabel5.setText(tabelModel.getValueAt(row, 1)+"");
            jLabel8.setText(tabelModel.getValueAt(row, 2)+"");
            jLabel9.setText(tabelModel.getValueAt(row, 3)+"");
            jLabel12.setText(df.format(dateobj));
            tanggal = jLabel12.getText();
            
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
       
       //getting current date and time using Date class
       
       
      
        
        nama = jLabel5.getText();
        jenis = jLabel8.getText();
        jumlah = jLabel9.getText();
        
        
        
        clearField();
        if(validation(nama, tanggal, status , username) == false)
        {
            JOptionPane.showMessageDialog(null, "Terjadi Error.");
            defaultValue();
        }
        else
        {
            tambahDataBarang(nama, tanggal, status, username);
            
            try
            { sendMessage(); }
            catch (Exception ex)
            { }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void tambahDataBarang(String nama, String tanggal, String status, String username)
    {
        try
        {
            String query = "INSERT INTO pemesanan (nama_pesanan, tgl_wkt_pemesanan, status, pemesan) VALUES (?,?,?,?)";
            preparedStatement = myConnection.prepareStatement(query);
            preparedStatement.setString(1, nama);
            preparedStatement.setString(2, tanggal);
            preparedStatement.setString(3, status);
            preparedStatement.setString(4, username);
            preparedStatement.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "Menu berhasil dipesan,silahkan pantau di menu pesanan.");
            
            preparedStatement.close();
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, "ERROR SQL ");
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "ERROR");
        }
    }
    
    
   

}

